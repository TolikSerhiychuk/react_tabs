{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","clickedTab","find","tab","id","className","map","cn","href","onClick","handleTabClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEtE,OACE,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBACEE,UAAWE,IACT,CAAE,YAAaN,EAAWG,KAAOD,EAAIC,KAEvC,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,YAxBF,SAACN,GAClBA,EAAIC,KAAOL,GACbC,EAAcG,GAuBAO,CAAeP,IAJnB,SAOGA,EAAIQ,SATFR,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWW,gBC5CTd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,IAMoBT,EANpB,EAA0CU,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAUA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,oCANgBD,EAOiBL,EANnCD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOA,MAAON,EAAK,IAMUa,SAGhD,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAjBoB,SAACG,GACzBY,EAAiBZ,EAAIC,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f9ff644e.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const clickedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                className={cn(\n                  { 'is-active': clickedTab.id === tab.id },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    handleTabClick(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {clickedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleSelectedTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const clickedTab = (id: string) => (\n    tabs.find(tab => tab.id === id) || tabs[0]\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${clickedTab(selectedTabId).title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}